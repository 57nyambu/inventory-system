# Generated by Django 5.1.3 on 2025-06-21 16:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BinLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('bin_type', models.CharField(choices=[('SHELF', 'Shelf'), ('PALLET', 'Pallet'), ('BIN', 'Storage Bin'), ('ROOM', 'Storage Room')], default='SHELF', max_length=10)),
                ('barcode', models.CharField(blank=True, max_length=50, unique=True)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
                ('capacity', models.PositiveIntegerField(blank=True, help_text='Max items that can be stored', null=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Bin Location',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('kra_pin', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^[A-Z]{1}\\d{9}[A-Z]{1}$')], verbose_name='KRA PIN')),
                ('business_reg_no', models.CharField(max_length=20, verbose_name='Business Registration Number')),
                ('vat_no', models.CharField(blank=True, max_length=20, verbose_name='VAT Number')),
                ('county', models.CharField(choices=[('MOMBASA', 'Mombasa'), ('KWALE', 'Kwale'), ('KILIFI', 'Kilifi'), ('TANA_RIVER', 'Tana River'), ('LAMU', 'Lamu'), ('TAITA_TAVETA', 'Taita Taveta'), ('GARISSA', 'Garissa'), ('WAJIR', 'Wajir'), ('MANDERA', 'Mandera'), ('MARSABIT', 'Marsabit'), ('ISIOLO', 'Isiolo'), ('MERU', 'Meru'), ('THARAKA_NITHI', 'Tharaka Nithi'), ('EMBU', 'Embu'), ('KITUI', 'Kitui'), ('MACHAKOS', 'Machakos'), ('MAKUENI', 'Makueni'), ('NYANDARUA', 'Nyandarua'), ('NYERI', 'Nyeri'), ('KIRINYAGA', 'Kirinyaga'), ('MURANGA', "Murang'a"), ('KIAMBU', 'Kiambu'), ('TURKANA', 'Turkana'), ('WEST_POKOT', 'West Pokot'), ('SAMBURU', 'Samburu'), ('TRANS_NZOIA', 'Trans Nzoia'), ('UASIN_GISHU', 'Uasin Gishu'), ('ELGEYO_MARAKWET', 'Elgeyo Marakwet'), ('NANDI', 'Nandi'), ('BARINGO', 'Baringo'), ('LAIKIPIA', 'Laikipia'), ('NAKURU', 'Nakuru'), ('NAROK', 'Narok'), ('KAJIADO', 'Kajiado'), ('KERICHO', 'Kericho'), ('BOMET', 'Bomet'), ('KAKAMEGA', 'Kakamega'), ('VIHIGA', 'Vihiga'), ('BUNGOMA', 'Bungoma'), ('BUSIA', 'Busia'), ('SIAYA', 'Siaya'), ('KISUMU', 'Kisumu'), ('HOMA_BAY', 'Homa Bay'), ('MIGORI', 'Migori'), ('KISII', 'Kisii'), ('NYAMIRA', 'Nyamira'), ('NAIROBI', 'Nairobi')], max_length=50)),
                ('physical_address', models.TextField()),
                ('postal_address', models.CharField(blank=True, max_length=100)),
                ('contact_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+254\\d{9}$')])),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('manager', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['ADMIN', 'BRANCH_MANAGER']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Branches',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('warehouse_type', models.CharField(choices=[('DRY', 'Dry Goods'), ('COLD', 'Cold Storage'), ('FROZEN', 'Frozen Goods'), ('HAZARD', 'Hazardous Materials')], default='DRY', max_length=10)),
                ('physical_address', models.TextField()),
                ('contact_phone', models.CharField(max_length=15)),
                ('capacity', models.PositiveIntegerField(blank=True, help_text='Total capacity in cubic meters', null=True)),
                ('temperature_controlled', models.BooleanField(default=False)),
                ('temperature_range', models.CharField(blank=True, max_length=20)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='warehouses.branch')),
                ('manager', models.ForeignKey(limit_choices_to={'role__in': ['WAREHOUSE', 'BRANCH_MANAGER']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['branch', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StockTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('reference_no', models.CharField(max_length=20, unique=True)),
                ('transfer_type', models.CharField(choices=[('INTERNAL', 'Internal Transfer'), ('SUPPLIER', 'Supplier Delivery'), ('CUSTOMER', 'Customer Return'), ('DAMAGED', 'Damaged Goods')], default='INTERNAL', max_length=10)),
                ('quantity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('IN_TRANSIT', 'In Transit'), ('RECEIVED', 'Received'), ('VERIFIED', 'Verified'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=15)),
                ('delivery_note', models.CharField(blank=True, max_length=50)),
                ('transporter', models.CharField(blank=True, max_length=100)),
                ('transporter_license', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_transfers', to=settings.AUTH_USER_MODEL)),
                ('from_bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfers_out', to='warehouses.binlocation')),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='initiated_transfers', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product')),
                ('to_bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfers_in', to='warehouses.binlocation')),
                ('from_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfers_out', to='warehouses.warehouse')),
                ('to_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfers_in', to='warehouses.warehouse')),
            ],
            options={
                'verbose_name': 'Stock Transfer',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='binlocation',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouses.warehouse'),
        ),
        migrations.AlterUniqueTogether(
            name='binlocation',
            unique_together={('warehouse', 'name')},
        ),
    ]
